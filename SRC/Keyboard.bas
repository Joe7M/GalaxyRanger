function GUI_GetKeyString$(K)
	select case K
		case K_0:
			return "0"
		case K_1:
			return "1"
		case K_2:
			return "2"
		case K_3:
			return "3"
		case K_4:
			return "4"
		case K_5:
			return "5"
		case K_6:
			return "6"
		case K_7:
			return "7"
		case K_8:
			return "8"
		case K_9:
			return "9"
		case K_A:
			return "A"
		case K_B:
			return "B"
		case K_C:
			return "C"
		case K_D:
			return "D"
		case K_E:
			return "E"
		case K_F:
			return "F"
		case K_G:
			return "G"
		case K_H:
			return "H"
		case K_I:
			return "I"
		case K_J:
			return "J"
		case K_K:
			return "K"
		case K_L:
			return "L"
		case K_M:
			return "M"
		case K_N:
			return "N"
		case K_O:
			return "O"
		case K_P:
			return "P"
		case K_Q:
			return "Q"
		case K_R:
			return "R"
		case K_S:
			return "S"
		case K_T:
			return "T"
		case K_U:
			return "U"
		case K_V:
			return "V"
		case K_W:
			return "W"
		case K_X:
			return "X"
		case K_Y:
			return "Y"
		case K_Z:
			return "Z"
		case K_UP:
			return "UP"
		case K_DOWN:
			return "DOWN"
		case K_LEFT:
			return "LEFT"
		case K_RIGHT:
			return "RIGHT"
		case K_SPACE:
			return "SPACE"
		case K_BACKSPACE:
			return "BSPACE"
		'case K_COMMA:
		'	return ","
		case K_DECIMALSEPARATOR:
			return "."
		case K_DELETE:
			return "DEL"
		case K_END:
			return "END"
		'case K_EQUALS:
		'	return "="
		case K_ESCAPE:
			return "ESC"
		case K_HOME:
			return "HOME"
		case K_INSERT:
			return "INS"
		case KEYPAD_0:
			return "K0"
		case KEYPAD_1:
			return "K1"
		case KEYPAD_2:
			return "K2"
		case KEYPAD_3:
			return "K3"
		case KEYPAD_4:
			return "K4"
		case KEYPAD_5:
			return "K5"
		case KEYPAD_6:
			return "K6"
		case KEYPAD_7:
			return "K7"
		case KEYPAD_8:
			return "K8"
		case KEYPAD_9:
			return "K9"
		case KEYPAD_ENTER:
			return "KENTER"
		case KEYPAD_SPACE:
			return "KSPACE"
		case K_LALT:
			return "LALT"
		case K_LCTRL:
			return "LCTRL"
		case K_LSHIFT:
			return "LSHIFT"
		case K_MINUS:
			return "-"
		case K_RALT:
			return "RALT"
		case K_RCTRL:
			return "RCTRL"
		case K_RETURN:
			return "RETURN"
		case K_RSHIFT:
			return "RSHIFT"
		case K_SEMICOLON:
			return ";"
		case K_SLASH:
			return "/"
		case K_TAB:
			return "TAB"
	end select	
			
	return str(K)
			
end function



function GUI_Setkey(K)

	if(key(K_0)) then 
		return K_0 
	end if
	if(key(K_1)) then 
		return K_1 
	end if
	if(key(K_2)) then 
		return K_2
	end if
	if(key(K_3)) then 
		return K_3 
	end if
	if(key(K_4)) then 
		return K_4
	end if
	if(key(K_5)) then 
		return K_5
	end if
	if(key(K_6)) then 
		return K_6
	end if
	if(key(K_7)) then 
		return K_7
	end if
	if(key(K_8)) then 
		return K_8
	end if
	if(key(K_9)) then 
		return K_9
	end if
	if(key(K_A)) then 
		return K_A
	end if
	if(key(K_B)) then 
		return K_B
	end if
	if(key(K_C)) then 
		return K_C
	end if
	if(key(K_D)) then 
		return K_D
	end if
	if(key(K_E)) then 
		return K_E
	end if
	if(key(K_F)) then 
		return K_F
	end if
	if(key(K_G)) then 
		return K_G
	end if
	if(key(K_H)) then 
		return K_H
	end if
	if(key(K_I)) then 
		return K_I
	end if
	if(key(K_J)) then 
		return K_J
	end if
	if(key(K_K)) then 
		return K_K
	end if
	if(key(K_L)) then 
		return K_L
	end if
	if(key(K_M)) then 
		return K_M
	end if
	if(key(K_N)) then 
		return K_N
	end if
	if(key(K_O)) then 
		return K_O
	end if
	if(key(K_P)) then 
		return K_P
	end if
	if(key(K_Q)) then 
		return K_Q
	end if
	if(key(K_R)) then 
		return K_R
	end if
	if(key(K_S)) then 
		return K_S
	end if
	if(key(K_T)) then 
		return K_T
	end if
	if(key(K_U)) then 
		return K_U
	end if
	if(key(K_V)) then 
		return K_V
	end if
	if(key(K_W)) then 
		return K_W
	end if
	if(key(K_X)) then 
		return K_X
	end if
	if(key(K_Y)) then 
		return K_Y
	end if
	if(key(K_Z)) then 
		return K_Z
	end if
	if(key(K_BACKSLASH)) then 
		return K_BACKSLASH 
	end if
	if(key(K_BACKSPACE)) then 
		return K_BACKSPACE 
	end if
	if(key(K_DELETE)) then 
		return K_DELETE 
	end if
	if(key(K_DOWN)) then 
		return K_DOWN 
	end if
	if(key(K_END)) then 
		return K_END 
	end if
	if(key(K_ESCAPE)) then 
		return K_ESCAPE 
	end if
	if(key(K_GRAVE)) then 
		return K_GRAVE 
	end if
	if(key(K_HELP)) then 
		return K_HELP 
	end if
	if(key(K_HOME)) then 
		return K_HOME 
	end if
	if(key(K_INSERT)) then 
		return K_INSERT 
	end if
	if(key(KEYPAD_0)) then 
		return KEYPAD_0 
	end if
	if(key(KEYPAD_1)) then 
		return KEYPAD_1 
	end if
	if(key(KEYPAD_2)) then 
		return KEYPAD_2 
	end if
	if(key(KEYPAD_3)) then 
		return KEYPAD_3 
	end if
	if(key(KEYPAD_4)) then 
		return KEYPAD_4 
	end if
	if(key(KEYPAD_5)) then 
		return KEYPAD_5 
	end if
	if(key(KEYPAD_6)) then 
		return KEYPAD_6 
	end if
	if(key(KEYPAD_7)) then 
		return KEYPAD_7 
	end if
	if(key(KEYPAD_8)) then 
		return KEYPAD_8 
	end if
	if(key(KEYPAD_9)) then 
		return KEYPAD_9 
	end if
	if(key(KEYPAD_COLON)) then 
		return KEYPAD_COLON 
	end if
	if(key(KEYPAD_COMMA)) then 
		return KEYPAD_COMMA 
	end if
	if(key(KEYPAD_DIVIDE)) then 
		return KEYPAD_DIVIDE 
	end if
	if(key(KEYPAD_ENTER)) then 
		return KEYPAD_ENTER 
	end if
	'if(key(KEYPAD_EQUALS)) then 
	'	return KEYPAD_EQUALS 
	'end if
	'if(key(KEYPAD_MINUS)) then 
	'	return KEYPAD_MINUS 
	'end if
	'if(key(KEYPAD_MULTIPLY)) then 
	'	return KEYPAD_MULTIPLY 
	'end if
	'if(key(KEYPAD_PERIOD)) then 
	'	return KEYPAD_PERIOD 
	'end if
	if(key(KEYPAD_PLUS)) then 
		return KEYPAD_PLUS 
	end if
	if(key(K_LALT)) then 
		return K_LALT 
	end if
	if(key(K_LCTRL)) then 
		return K_LCTRL 
	end if
	if(key(K_LEFT)) then 
		return K_LEFT 
	end if
	if(key(K_LEFTBRACKET)) then 
		return K_LEFTBRACKET 
	end if
	if(key(K_LGUI)) then 
		return K_LGUI 
	end if
	if(key(K_LSHIFT)) then 
		return K_LSHIFT 
	end if
	if(key(K_MINUS)) then 
		return K_MINUS 
	end if
	if(key(K_PAGEDOWN)) then 
		return K_PAGEDOWN 
	end if
	if(key(K_PAGEUP)) then 
		return K_PAGEUP 
	end if
	'if(key(K_PERIOD)) then 
	'	return K_PERIOD 
	'end if
	if(key(K_PRINTSCREEN)) then 
		return K_PRINTSCREEN 
	end if
	if(key(K_RALT)) then 
		return K_RALT 
	end if
	if(key(K_RCTRL)) then 
		return K_RCTRL 
	end if
	if(key(K_RETURN)) then 
		return K_RETURN 
	end if
	if(key(K_RETURN2)) then 
		return K_RETURN2 
	end if
	if(key(K_RGUI)) then 
		return K_RGUI 
	end if
	if(key(K_RIGHT)) then 
		return K_RIGHT 
	end if
	if(key(K_RIGHTBRACKET)) then 
		return K_RIGHTBRACKET 
	end if
	if(key(K_RSHIFT)) then 
		return K_RSHIFT 
	end if
	if(key(K_SCROLLLOCK)) then 
		return K_SCROLLLOCK 
	end if
	if(key(K_SEMICOLON)) then 
		return K_SEMICOLON 
	end if
	if(key(K_SLASH)) then 
		return K_SLASH 
	end if
	if(key(K_SPACE)) then 
		return K_SPACE 
	end if
	if(key(K_TAB)) then 
		return K_TAB 
	end if
	if(key(K_UNDO)) then 
		return K_UNDO 
	end if
	if(key(K_UP)) then 
		return K_UP 
	end if

	return -1
	
	
end function
